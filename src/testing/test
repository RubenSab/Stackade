"corelibs/strings" run
"corelibs/printing" run

"annotate" (
    "string" swap :str

    "i" 0 :num
    {(i 0 >=   i string strLen <   and)
        (
            {(string i strAt "a" ==)
                (i dup 1 + =)
                (i -1 =)
            }
            self
        )
    }

    {(i string strLen ==)
        (string " [" i numToStr "]" strCat strCat strCat)
        (string refGet)
    }
) :seq

# a: cy
# c: a
# y: aaa

"computeNext" (
    dup 0 strAt
    {
        (dup "a" ==)
        ("bc" swap pop)
        ({
            ("b" ==)
            ("a")
            ("aaa")
        })
    }
    strCat 2 sliceRight
) :seq


"loadToTuringMachine" (
    dup annotate println
    {
        (dup strLen 1 >)
        (computeNext dup annotate println self)
    }
) :seq


"numToA" (
    "i" swap :num
    "a" {(i 1 >)("a" strCat i    dup 1 - =    self)}
) :seq

"write a number to give to the Turing Machine: " print
input strToNum numToA loadToTuringMachine